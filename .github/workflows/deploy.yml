name: Deploy Serverless App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: api/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd api
          npm install

      - name: Create .env file
        run: |
          cd api
          echo 'ENV=hml' > .env
          echo 'DATABASE_URL="${{ secrets.DATABASE_URL }}"' >> .env
          echo 'SG_ID="${{ secrets.SG_ID }}"' >> .env
          echo 'SUBNET1_ID="${{ secrets.SUBNET1_ID }}"' >> .env
          echo 'SUBNET2_ID="${{ secrets.SUBNET2_ID }}"' >> .env

      - name: Generate Prisma Client
        run: |
          cd api
          npx --yes prisma generate

      - name: Build the project
        run: |
          cd api
          npm run build

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SG_ID: ${{ secrets.SG_ID }}
          SUBNET1_ID: ${{ secrets.SUBNET1_ID }}
          SUBNET2_ID: ${{ secrets.SUBNET2_ID }}
        run: |
          cd api
          serverless deploy --stage hml
